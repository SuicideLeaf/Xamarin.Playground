// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Threading.Tasks;
using Foundation;
using UIKit;

namespace PullToRefresh.iOS
{
	public class DynamicSource : UITableViewSource
	{
		public static string[ ] Source = {
			"Cell 1","Cell 2","Cell 3",
			"Cell 4","Cell 5","Cell 6",
			"Cell 7","Cell 8","Cell 9",
			"Cell 10","Cell 11","Cell 12",
			"Cell 13","Cell 14","Cell 15"
		};

		public override UITableViewCell GetCell( UITableView tableView, NSIndexPath indexPath )
		{
			DynamicCell cell = ( DynamicCell )tableView.DequeueReusableCell( "DynamicCell", indexPath );

			cell.UpdateViews( Source[ indexPath.Row ] );

			return cell;
		}

		public override nint RowsInSection( UITableView tableview, nint section )
		{
			return Source.Length;
		}
	}


	public partial class DynamicTableViewController : UITableViewController
	{
		public DynamicTableViewController( IntPtr handle ) : base( handle )
		{
		}

		public override void ViewDidLoad( )
		{
			base.ViewDidLoad( );

			TableView.Source = new DynamicSource( );

			RefreshControl.ValueChanged += async ( sender, e ) =>
			{
				await Task.Delay( 1000 );

				RefreshControl.EndRefreshing( );
			};
		}

		//private async void RefreshControl_ValueChanged( object sender, EventArgs e )
		//{
		//	if ( RefreshControl.Refreshing )
		//	{
		//		await Task.Delay( 1000 );
		//		RefreshControl.EndRefreshing( );
		//	}
		//}
	}
}
