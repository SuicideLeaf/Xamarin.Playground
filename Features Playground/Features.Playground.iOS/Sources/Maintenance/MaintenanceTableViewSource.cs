// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.Linq;
using Features.Playground.Core.Classes;
using Features.Playground.Core.Models;
using Features.Playground.iOS.Views.Cells;
using Foundation;
using UIKit;

namespace Features.Playground.iOS.Sources.Maintenance
{
	public class MaintenanceTableViewSource : UITableViewSource
	{
		private readonly List<MaintenanceListItem> _items;

		public MaintenanceTableViewSource( Enums.MaintenanceStatus maintenanceStatus )
		{
			_items = new List<MaintenanceListItem>( );

			Random rnd = new Random( );
			var itemCount = rnd.Next( 0, 20 );
			for ( int i = 0; i < itemCount; i++ )
			{
				var month = rnd.Next( 7, 10 );
				var day = rnd.Next( 1, 30 );

				MaintenanceListItem item = new MaintenanceListItem
				{
					Status = maintenanceStatus,
					Title = $"Maintenance {i}",
					DueDate = new DateTime( 2018, month, day )
				};

				_items.Add( item );
			}

			_items = _items.OrderBy( m => m.DueDate ).ThenBy( m => m.Title ).ToList( );
		}

		public override UITableViewCell GetCell( UITableView tableView, NSIndexPath indexPath )
		{
			if ( tableView.DequeueReusableCell( "MaintenanceTableViewCell", indexPath ) is MaintenanceTableViewCell maintenanceCell )
			{
				maintenanceCell.UpdateViews( _items[ indexPath.Row ] );

				return maintenanceCell;
			}

			throw new NotSupportedException( "Only cells of type 'MaintenanceTableViewCell' are supported" );
		}

		public override nint RowsInSection( UITableView tableview, nint section )
		{
			return _items.Count( );
		}
	}
}